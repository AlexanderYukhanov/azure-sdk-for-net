// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Redis.Models
{
    using System.Linq;

    /// <summary>
    /// A firewall rule on a redis cache has a name, and describes a
    /// contiguous range of IP addresses permitted to connect
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class RedisFirewallRule
    {
        /// <summary>
        /// Initializes a new instance of the RedisFirewallRule class.
        /// </summary>
        public RedisFirewallRule() { }

        /// <summary>
        /// Initializes a new instance of the RedisFirewallRule class.
        /// </summary>
        /// <param name="startIP">lowest IP address included in the
        /// range</param>
        /// <param name="endIP">highest IP address included in the
        /// range</param>
        /// <param name="id">resource ID (of the firewall rule)</param>
        /// <param name="name">name of the firewall rule</param>
        /// <param name="type">type (of the firewall rule resource =
        /// 'Microsoft.Cache/redis/firewallRule')</param>
        public RedisFirewallRule(string startIP, string endIP, string id = default(string), string name = default(string), string type = default(string))
        {
            Id = id;
            Name = name;
            Type = type;
            StartIP = startIP;
            EndIP = endIP;
        }

        /// <summary>
        /// Gets resource ID (of the firewall rule)
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets name of the firewall rule
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets type (of the firewall rule resource =
        /// 'Microsoft.Cache/redis/firewallRule')
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

        /// <summary>
        /// Gets or sets lowest IP address included in the range
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.startIP")]
        public string StartIP { get; set; }

        /// <summary>
        /// Gets or sets highest IP address included in the range
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.endIP")]
        public string EndIP { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (StartIP == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "StartIP");
            }
            if (EndIP == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "EndIP");
            }
        }
    }
}
