// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using Azure;
    using Management;
    using WebSites;
    using Rest;
    using Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Used for getting ResourceHealthCheck settings.
    /// </summary>
    [JsonTransformation]
    public partial class ResourceHealthMetadata : Resource
    {
        /// <summary>
        /// Initializes a new instance of the ResourceHealthMetadata class.
        /// </summary>
        public ResourceHealthMetadata() { }

        /// <summary>
        /// Initializes a new instance of the ResourceHealthMetadata class.
        /// </summary>
        /// <param name="location">Resource Location.</param>
        /// <param name="id">Resource Id.</param>
        /// <param name="name">Resource Name.</param>
        /// <param name="kind">Kind of resource.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="resourceHealthMetadataId">ARM Resource Id</param>
        /// <param name="category">The category that the resource matches in
        /// the RHC Policy File</param>
        /// <param name="signalAvailability">Is there a health signal for the
        /// resource</param>
        public ResourceHealthMetadata(string location, string id = default(string), string name = default(string), string kind = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string resourceHealthMetadataId = default(string), string category = default(string), bool? signalAvailability = default(bool?))
            : base(location, id, name, kind, type, tags)
        {
            ResourceHealthMetadataId = resourceHealthMetadataId;
            Category = category;
            SignalAvailability = signalAvailability;
        }

        /// <summary>
        /// Gets or sets ARM Resource Id
        /// </summary>
        [JsonProperty(PropertyName = "properties.id")]
        public string ResourceHealthMetadataId { get; set; }

        /// <summary>
        /// Gets or sets the category that the resource matches in the RHC
        /// Policy File
        /// </summary>
        [JsonProperty(PropertyName = "properties.category")]
        public string Category { get; set; }

        /// <summary>
        /// Gets or sets is there a health signal for the resource
        /// </summary>
        [JsonProperty(PropertyName = "properties.signalAvailability")]
        public bool? SignalAvailability { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}

