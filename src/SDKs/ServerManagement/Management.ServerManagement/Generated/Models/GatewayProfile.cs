// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.ServerManagement.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.ServerManagement;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// JSON properties that the gateway service uses know how to communicate
    /// with the resource.
    /// </summary>
    public partial class GatewayProfile
    {
        /// <summary>
        /// Initializes a new instance of the GatewayProfile class.
        /// </summary>
        public GatewayProfile()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GatewayProfile class.
        /// </summary>
        /// <param name="dataPlaneServiceBaseAddress">The Dataplane connection
        /// URL.</param>
        /// <param name="gatewayId">The ID of the gateway.</param>
        /// <param name="environment">The environment for the gateway (DEV,
        /// DogFood, or Production).</param>
        /// <param name="upgradeManifestUrl">Gateway upgrade manifest
        /// URL.</param>
        /// <param name="messagingNamespace">Messaging namespace.</param>
        /// <param name="messagingAccount">Messaging Account.</param>
        /// <param name="messagingKey">Messaging Key.</param>
        /// <param name="requestQueue">Request queue name.</param>
        /// <param name="responseTopic">Response topic name.</param>
        /// <param name="statusBlobSignature">The gateway status blob SAS
        /// URL.</param>
        public GatewayProfile(string dataPlaneServiceBaseAddress = default(string), string gatewayId = default(string), string environment = default(string), string upgradeManifestUrl = default(string), string messagingNamespace = default(string), string messagingAccount = default(string), string messagingKey = default(string), string requestQueue = default(string), string responseTopic = default(string), string statusBlobSignature = default(string))
        {
            DataPlaneServiceBaseAddress = dataPlaneServiceBaseAddress;
            GatewayId = gatewayId;
            Environment = environment;
            UpgradeManifestUrl = upgradeManifestUrl;
            MessagingNamespace = messagingNamespace;
            MessagingAccount = messagingAccount;
            MessagingKey = messagingKey;
            RequestQueue = requestQueue;
            ResponseTopic = responseTopic;
            StatusBlobSignature = statusBlobSignature;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the Dataplane connection URL.
        /// </summary>
        [JsonProperty(PropertyName = "dataPlaneServiceBaseAddress")]
        public string DataPlaneServiceBaseAddress { get; set; }

        /// <summary>
        /// Gets or sets the ID of the gateway.
        /// </summary>
        [JsonProperty(PropertyName = "gatewayId")]
        public string GatewayId { get; set; }

        /// <summary>
        /// Gets or sets the environment for the gateway (DEV, DogFood, or
        /// Production).
        /// </summary>
        [JsonProperty(PropertyName = "environment")]
        public string Environment { get; set; }

        /// <summary>
        /// Gets or sets gateway upgrade manifest URL.
        /// </summary>
        [JsonProperty(PropertyName = "upgradeManifestUrl")]
        public string UpgradeManifestUrl { get; set; }

        /// <summary>
        /// Gets or sets messaging namespace.
        /// </summary>
        [JsonProperty(PropertyName = "messagingNamespace")]
        public string MessagingNamespace { get; set; }

        /// <summary>
        /// Gets or sets messaging Account.
        /// </summary>
        [JsonProperty(PropertyName = "messagingAccount")]
        public string MessagingAccount { get; set; }

        /// <summary>
        /// Gets or sets messaging Key.
        /// </summary>
        [JsonProperty(PropertyName = "messagingKey")]
        public string MessagingKey { get; set; }

        /// <summary>
        /// Gets or sets request queue name.
        /// </summary>
        [JsonProperty(PropertyName = "requestQueue")]
        public string RequestQueue { get; set; }

        /// <summary>
        /// Gets or sets response topic name.
        /// </summary>
        [JsonProperty(PropertyName = "responseTopic")]
        public string ResponseTopic { get; set; }

        /// <summary>
        /// Gets or sets the gateway status blob SAS URL.
        /// </summary>
        [JsonProperty(PropertyName = "statusBlobSignature")]
        public string StatusBlobSignature { get; set; }

    }
}
