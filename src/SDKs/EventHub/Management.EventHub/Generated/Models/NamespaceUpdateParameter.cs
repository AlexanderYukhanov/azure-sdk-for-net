// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.EventHub.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.EventHub;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Parameters supplied to the Patch/update Namespace operation.
    /// </summary>
    public partial class NamespaceUpdateParameter
    {
        /// <summary>
        /// Initializes a new instance of the NamespaceUpdateParameter class.
        /// </summary>
        public NamespaceUpdateParameter()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NamespaceUpdateParameter class.
        /// </summary>
        /// <param name="tags">Resource tags</param>
        /// <param name="sku">The sku of the created Namespace</param>
        public NamespaceUpdateParameter(IDictionary<string, string> tags = default(IDictionary<string, string>), Sku sku = default(Sku))
        {
            Tags = tags;
            Sku = sku;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets resource tags
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// Gets or sets the sku of the created Namespace
        /// </summary>
        [JsonProperty(PropertyName = "sku")]
        public Sku Sku { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Sku != null)
            {
                Sku.Validate();
            }
        }
    }
}
