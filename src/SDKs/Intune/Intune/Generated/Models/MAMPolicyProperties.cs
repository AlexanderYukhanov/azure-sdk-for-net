// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Intune.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.Intune;
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class MAMPolicyProperties
    {
        /// <summary>
        /// Initializes a new instance of the MAMPolicyProperties class.
        /// </summary>
        public MAMPolicyProperties()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MAMPolicyProperties class.
        /// </summary>
        /// <param name="appSharingFromLevel">Possible values include: 'none',
        /// 'policyManagedApps', 'allApps'</param>
        /// <param name="appSharingToLevel">Possible values include: 'none',
        /// 'policyManagedApps', 'allApps'</param>
        /// <param name="authentication">Possible values include: 'required',
        /// 'notRequired'</param>
        /// <param name="clipboardSharingLevel">Possible values include:
        /// 'blocked', 'policyManagedApps', 'policyManagedAppsWithPasteIn',
        /// 'allApps'</param>
        /// <param name="dataBackup">Possible values include: 'allow',
        /// 'block'</param>
        /// <param name="fileSharingSaveAs">Possible values include: 'allow',
        /// 'block'</param>
        /// <param name="pin">Possible values include: 'required',
        /// 'notRequired'</param>
        /// <param name="deviceCompliance">Possible values include: 'enable',
        /// 'disable'</param>
        /// <param name="managedBrowser">Possible values include: 'required',
        /// 'notRequired'</param>
        /// <param name="groupStatus">Possible values include: 'notTargeted',
        /// 'targeted'</param>
        public MAMPolicyProperties(string friendlyName, string description = default(string), string appSharingFromLevel = default(string), string appSharingToLevel = default(string), string authentication = default(string), string clipboardSharingLevel = default(string), string dataBackup = default(string), string fileSharingSaveAs = default(string), string pin = default(string), int? pinNumRetry = default(int?), string deviceCompliance = default(string), string managedBrowser = default(string), System.TimeSpan? accessRecheckOfflineTimeout = default(System.TimeSpan?), System.TimeSpan? accessRecheckOnlineTimeout = default(System.TimeSpan?), System.TimeSpan? offlineWipeTimeout = default(System.TimeSpan?), int? numOfApps = default(int?), string groupStatus = default(string), System.DateTime? lastModifiedTime = default(System.DateTime?))
        {
            FriendlyName = friendlyName;
            Description = description;
            AppSharingFromLevel = appSharingFromLevel;
            AppSharingToLevel = appSharingToLevel;
            Authentication = authentication;
            ClipboardSharingLevel = clipboardSharingLevel;
            DataBackup = dataBackup;
            FileSharingSaveAs = fileSharingSaveAs;
            Pin = pin;
            PinNumRetry = pinNumRetry;
            DeviceCompliance = deviceCompliance;
            ManagedBrowser = managedBrowser;
            AccessRecheckOfflineTimeout = accessRecheckOfflineTimeout;
            AccessRecheckOnlineTimeout = accessRecheckOnlineTimeout;
            OfflineWipeTimeout = offlineWipeTimeout;
            NumOfApps = numOfApps;
            GroupStatus = groupStatus;
            LastModifiedTime = lastModifiedTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "friendlyName")]
        public string FriendlyName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'none', 'policyManagedApps',
        /// 'allApps'
        /// </summary>
        [JsonProperty(PropertyName = "appSharingFromLevel")]
        public string AppSharingFromLevel { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'none', 'policyManagedApps',
        /// 'allApps'
        /// </summary>
        [JsonProperty(PropertyName = "appSharingToLevel")]
        public string AppSharingToLevel { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'required', 'notRequired'
        /// </summary>
        [JsonProperty(PropertyName = "authentication")]
        public string Authentication { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'blocked',
        /// 'policyManagedApps', 'policyManagedAppsWithPasteIn', 'allApps'
        /// </summary>
        [JsonProperty(PropertyName = "clipboardSharingLevel")]
        public string ClipboardSharingLevel { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'allow', 'block'
        /// </summary>
        [JsonProperty(PropertyName = "dataBackup")]
        public string DataBackup { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'allow', 'block'
        /// </summary>
        [JsonProperty(PropertyName = "fileSharingSaveAs")]
        public string FileSharingSaveAs { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'required', 'notRequired'
        /// </summary>
        [JsonProperty(PropertyName = "pin")]
        public string Pin { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "pinNumRetry")]
        public int? PinNumRetry { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'enable', 'disable'
        /// </summary>
        [JsonProperty(PropertyName = "deviceCompliance")]
        public string DeviceCompliance { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'required', 'notRequired'
        /// </summary>
        [JsonProperty(PropertyName = "managedBrowser")]
        public string ManagedBrowser { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "accessRecheckOfflineTimeout")]
        public System.TimeSpan? AccessRecheckOfflineTimeout { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "accessRecheckOnlineTimeout")]
        public System.TimeSpan? AccessRecheckOnlineTimeout { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "offlineWipeTimeout")]
        public System.TimeSpan? OfflineWipeTimeout { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "numOfApps")]
        public int? NumOfApps { get; private set; }

        /// <summary>
        /// Gets possible values include: 'notTargeted', 'targeted'
        /// </summary>
        [JsonProperty(PropertyName = "groupStatus")]
        public string GroupStatus { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastModifiedTime")]
        public System.DateTime? LastModifiedTime { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (FriendlyName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FriendlyName");
            }
        }
    }
}
