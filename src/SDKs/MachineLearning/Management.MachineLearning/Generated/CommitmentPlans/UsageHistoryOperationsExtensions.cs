// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.MachineLearning.CommitmentPlans
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.MachineLearning;
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for UsageHistoryOperations.
    /// </summary>
    public static partial class UsageHistoryOperationsExtensions
    {
            /// <summary>
            /// Retrieve the usage history for an Azure ML commitment plan.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='commitmentPlanName'>
            /// The Azure ML commitment plan name.
            /// </param>
            /// <param name='skipToken'>
            /// Continuation token for pagination.
            /// </param>
            public static IPage<PlanUsageHistory> List(this IUsageHistoryOperations operations, string resourceGroupName, string commitmentPlanName, string skipToken = default(string))
            {
                return operations.ListAsync(resourceGroupName, commitmentPlanName, skipToken).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve the usage history for an Azure ML commitment plan.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='commitmentPlanName'>
            /// The Azure ML commitment plan name.
            /// </param>
            /// <param name='skipToken'>
            /// Continuation token for pagination.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<PlanUsageHistory>> ListAsync(this IUsageHistoryOperations operations, string resourceGroupName, string commitmentPlanName, string skipToken = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, commitmentPlanName, skipToken, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieve the usage history for an Azure ML commitment plan.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<PlanUsageHistory> ListNext(this IUsageHistoryOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve the usage history for an Azure ML commitment plan.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<PlanUsageHistory>> ListNextAsync(this IUsageHistoryOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
