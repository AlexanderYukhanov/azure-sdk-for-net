// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.IotHub.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.IotHub;
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// SKU properties.
    /// </summary>
    public partial class IotHubSkuDescription
    {
        /// <summary>
        /// Initializes a new instance of the IotHubSkuDescription class.
        /// </summary>
        public IotHubSkuDescription()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IotHubSkuDescription class.
        /// </summary>
        /// <param name="resourceType">The type of the resource.</param>
        public IotHubSkuDescription(IotHubSkuInfo sku, IotHubCapacity capacity, string resourceType = default(string))
        {
            ResourceType = resourceType;
            Sku = sku;
            Capacity = capacity;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the type of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "resourceType")]
        public string ResourceType { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sku")]
        public IotHubSkuInfo Sku { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "capacity")]
        public IotHubCapacity Capacity { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Sku == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Sku");
            }
            if (Capacity == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Capacity");
            }
            if (Sku != null)
            {
                Sku.Validate();
            }
            if (Capacity != null)
            {
                Capacity.Validate();
            }
        }
    }
}
