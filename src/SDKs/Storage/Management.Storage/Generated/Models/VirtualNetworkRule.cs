// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Storage.Models
{
    using Azure;
    using Management;
    using Azure;
    using Management;
    using Storage;
    using Newtonsoft.Json;
    using Rest;
    using Storage;
    using System.Linq;

    /// <summary>
    /// Virtual Network rule.
    /// </summary>
    public partial class VirtualNetworkRule
    {
        /// <summary>
        /// Initializes a new instance of the VirtualNetworkRule class.
        /// </summary>
        public VirtualNetworkRule()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VirtualNetworkRule class.
        /// </summary>
        /// <param name="virtualNetworkResourceId">A URL of vnet, subnet,
        /// classicVnet or classicSubnet.</param>
        /// <param name="action">The action of virtual network ACL rule.
        /// Possible values include: 'Allow'</param>
        /// <param name="state">Gets the state of virtual network ACL rule.
        /// Possible values include: 'provisioning', 'deprovisioning',
        /// 'succeeded', 'failed', 'networkSourceDeleted'</param>
        public VirtualNetworkRule(string virtualNetworkResourceId, Action? action = default(Action?), State? state = default(State?))
        {
            VirtualNetworkResourceId = virtualNetworkResourceId;
            Action = action;
            State = state;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets a URL of vnet, subnet, classicVnet or classicSubnet.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string VirtualNetworkResourceId { get; set; }

        /// <summary>
        /// Gets or sets the action of virtual network ACL rule. Possible
        /// values include: 'Allow'
        /// </summary>
        [JsonProperty(PropertyName = "action")]
        public Action? Action { get; set; }

        /// <summary>
        /// Gets the state of virtual network ACL rule. Possible values
        /// include: 'provisioning', 'deprovisioning', 'succeeded', 'failed',
        /// 'networkSourceDeleted'
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public State? State { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (VirtualNetworkResourceId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "VirtualNetworkResourceId");
            }
        }
    }
}


